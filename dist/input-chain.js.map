{"version":3,"file":"input-chain.js","sourceRoot":"","sources":["../src/input-chain.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html} from 'lit'\nimport {property} from 'lit/decorators.js'\nimport {inputChainStyles} from './styles.js'\n\n/**\n * @element input-chain\n * Web component to select a sequence of steps, each step being a <select> element.\n *\n * Children are expected to be input or select html elements\n *\n * Features\n * - Nested Select Elements: Allows embedding <select> elements as children.\n * - Dynamic Interaction: Automatically updates subsequent select elements upon a change in any select element, resetting them to a default state.\n * - Event Handling: Emits change events whenever the value of a child select element changes.\n * - Validation Support: Supports form validation attributes like required, minlength, and maxlength.\n * - Combined Options Property: Holds a property with a concatenation of all options from child select elements.\n * - Supports option groups: Allows grouping options in the same select element.\n *\n * It has these events:\n * - [x] change\n *\n * It has these attributes:\n * - [x] name for form submission\n * - [x] for (form id)\n * - [x] reactive (the parent app needs to update the options on change)\n * - [x] select-tag-name (default: select) to change the tag name of the select elements\n * - [x] option-tag-name (default: option) to change the tag name of the option elements\n * - [ ] required\n * - [ ] maxlength\n * - [ ] minlength\n *\n * It has these properties:\n * - [x] options: a concatenation of all options from child select elements\n *\n * It has these slots:\n * - [x] default: contains the select elements\n *\n */\n\nexport class InputChain extends LitElement {\n  static override styles = inputChainStyles\n  SELECT_QUERY = ':scope > select, :scope > custom-select'\n  OPTION_QUERY =\n    ':scope > select > option, :scope > select > optgroup > option, :scope > custom-select > custom-option'\n\n  /**\n   * Form id\n   * This is the same API as input elements\n   */\n  @property({type: String, attribute: 'for'})\n  for = ''\n\n  /**\n   * Name of the property\n   * This is the same API as input elements\n   */\n  @property({type: String})\n  name = ''\n\n  @property({type: Boolean})\n  reactive = false\n\n  _selectTagName = 'select'\n  @property({type: String, attribute: 'select-tag-name'})\n  get selectTagName() {\n    return this._selectTagName\n  }\n  set selectTagName(newTagName: string) {\n    this._selectTagName = newTagName\n    this.SELECT_QUERY = `:scope > ${this._selectTagName}`\n    this.OPTION_QUERY = `:scope > ${this._selectTagName} > ${this._optionTagName}, :scope > ${this._selectTagName} > optgroup > ${this._optionTagName}`\n    this.requestUpdate()\n  }\n\n  _optionTagName = 'option'\n  @property({type: String, attribute: 'option-tag-name'})\n  get optionTagName() {\n    return this._optionTagName\n  }\n  set optionTagName(newTagName: string) {\n    this._optionTagName = newTagName\n    this.OPTION_QUERY = `:scope > ${this._selectTagName} > ${newTagName}, :scope > ${this._selectTagName} > optgroup > ${newTagName}`\n    this.requestUpdate()\n  }\n\n  constructor() {\n    super()\n  }\n\n  /**\n   * Form setter\n   * Handle formdata event to add the current value to the form\n   */\n  protected _form: HTMLFormElement | null = null\n  protected set form(newForm: HTMLFormElement | null) {\n    if (this._form) {\n      this._form.removeEventListener('formdata', this.onFormdata)\n    }\n    if (newForm) {\n      newForm.addEventListener('formdata', this.onFormdata)\n    }\n  }\n  protected get form() {\n    return this._form\n  }\n\n  /**\n   * All selected options\n   * @readonly\n   */\n  @property({type: Array})\n  get options(): HTMLOptionElement[] {\n    return Array.from(this.querySelectorAll(this.OPTION_QUERY))\n  }\n\n  private onChange_ = this.onChangeValue.bind(this)\n\n  /**\n   * Handle formdata event to add the current value to the form\n   */\n  protected onFormdata = (event: FormDataEvent) => {\n    if (!this.name) {\n      throw new Error('Attribute name is required for input-chain')\n    }\n    this.options\n      .filter((option) => option.selected)\n      .forEach((option) => {\n        event.formData.append(this.name, option.value)\n      })\n  }\n\n  /**\n   * Render the component\n   */\n  override render() {\n    return html` <slot></slot> `\n  }\n\n  override connectedCallback() {\n    super.connectedCallback()\n    // Use the form to add formdata\n    if (this.for) {\n      const form = document.querySelector<HTMLFormElement>(`form#${this.for}`)\n      if (form) {\n        this.form = form\n      }\n    } else {\n      this.form = this.closest('form')\n    }\n    // Listen to slots changes\n    this.shadowRoot!.addEventListener('change', this.onChange_)\n  }\n\n  override disconnectedCallback() {\n    this.shadowRoot!.removeEventListener('change', this.onChange_)\n    this.form = null\n    super.disconnectedCallback()\n  }\n\n  /**\n   * The data changed\n   * Reset the steps after the change\n   */\n  private onChangeValue(event: Event) {\n    const target = event.target as HTMLSelectElement\n    const children = Array.from(this.querySelectorAll(this.SELECT_QUERY))\n\n    if (!children.includes(target)) {\n      return\n    }\n    this.changeAt(children.indexOf(target))\n    // Dispatch our own event\n    event.preventDefault()\n    event.stopImmediatePropagation()\n    event.stopPropagation()\n    this.requestUpdate()\n  }\n\n  private redrawing = false\n  /**\n   * Reset the steps after the given index\n   */\n  protected changeAt(idx: number, reset = false) {\n    if (this.redrawing) return\n    this.redrawing = true\n    if (this.reactive) {\n      if (reset) {\n        const children = Array.from(\n          this.querySelectorAll(':scope > select, :scope > custom-select')\n        ) as HTMLSelectElement[]\n        children[0].value = ''\n      }\n      this.dispatchEvent(new CustomEvent('change', {detail: {idx}}))\n    } else {\n      // Messes with lit:\n      const children = Array.from(\n        this.querySelectorAll(':scope > select, :scope > custom-select')\n      ) as HTMLSelectElement[]\n      const target = idx >= 0 ? children[idx] : children[0]\n      const next = target?.value ? children[idx + 1] : target || children[0]\n      const nextIndex = target?.value ? idx + 1 : idx\n      if (next) {\n        // Remove all elements after next\n        children.slice(nextIndex + 1).forEach((child) => child.remove())\n        // Reset next\n        next.value = ''\n      }\n      this.dispatchEvent(new Event('change'))\n    }\n    this.redrawing = false\n  }\n}\n\nif (!window.customElements.get('input-chain')) {\n  window.customElements.define('input-chain', InputChain)\n}\n"]}