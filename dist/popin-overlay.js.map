{"version":3,"file":"popin-overlay.js","sourceRoot":"","sources":["../src/popin-overlay.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html} from 'lit'\nimport {property} from 'lit/decorators.js'\nimport {popinStyles} from './styles.js'\n\n/**\n * This PopinOverlay component is a simple dialog that can be used to display any html on top of your UI\n * It is not a modal, it is not blocking the UI, it is just a simple dialog that will catch focus and hide when the user press escape or click outside of it\n * The dialog will be automatically positioned where placed in the DOM but it will be moved and resized to be fully visible on all screen sizes\n *\n * Usage:\n *\n * ```\n * <popin-overlay hidden style=\"width: 400px\" no-auto-close>\n *   <div slot=\"header\">Header</div>\n *   <div slot=\"body\">Body</div>\n *   <div slot=\"footer\">Footer</div>\n * </popin-overlay>\n * ```\n *\n * @element popin-overlay\n * @htmltag popin-overlay\n * @htmlslot The content of the dialog\n * @htmlattr hidden - Hide the dialog\n * @htmlattr no-auto-close - Do not close the dialog when the user click outside of it\n * @fires {CustomEvent} popin-closed - Fires when the dialog is closed\n * @fires {CustomEvent} popin-opened - Fires when the dialog is opened\n * @cssprop {Color} --popin-background - The background color of the dialog\n * @cssprop {Color} --popin-color - The text color of the dialog\n *\n */\n\nexport class PopinOverlay extends LitElement {\n  static override styles = popinStyles\n\n  @property()\n  override hidden = false\n\n  @property({type: Boolean, attribute: 'no-auto-close'})\n  noAutoClose = false\n\n  private resized_ = this.ensureElementInView.bind(this)\n  private blured_ = this.blured.bind(this)\n  private keydown_ = this.keydown.bind(this)\n\n  override render() {\n    setTimeout(() => this.ensureElementInView())\n    return html` <slot></slot> `\n  }\n\n  override connectedCallback() {\n    super.connectedCallback()\n    // Make the element focusable\n    this.setAttribute('tabindex', '0')\n    // Attach events on this instance\n    this.addEventListener('blur', this.blured_)\n    this.addEventListener('keydown', this.keydown_)\n    // Attach elements on window\n    window.addEventListener('resize', this.resized_)\n    window.addEventListener('blur', this.blured_)\n  }\n\n  override disconnectedCallback() {\n    window.removeEventListener('resize', this.resized_)\n    window.removeEventListener('blur', this.blured_)\n    this.removeEventListener('blur', this.blured_)\n    this.removeEventListener('keydown', this.keydown_)\n    super.disconnectedCallback()\n  }\n\n  private getActiveElementRecursive(\n    element: Element | null = document.activeElement\n  ): Element | null {\n    if (element?.shadowRoot) {\n      return this.getActiveElementRecursive(\n        element.shadowRoot.activeElement as HTMLElement\n      )\n    }\n    return element\n  }\n\n  private blured() {\n    if (this.noAutoClose) return\n\n    // Give the time to the click event to be processed\n    setTimeout(() => {\n      // Check if the focus is still inside the dialog\n      const focusedElement = this.getActiveElementRecursive()\n      let popin = focusedElement as Node | ShadowRoot | null\n      while (popin && popin !== this) {\n        popin = popin.parentNode || (popin as ShadowRoot).host\n      }\n      if (popin !== this) {\n        // Hide the dialog\n        this.close()\n      } else {\n        // Focus the dialog again so that this function\n        // will be called again when the user click outside\n        //this.focus()\n      }\n    })\n  }\n\n  protected close() {\n    this.setAttribute('hidden', '')\n    this.blur()\n  }\n\n  private keydown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.close()\n    }\n  }\n\n  override attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ): void {\n    super.attributeChangedCallback(name, _old, value)\n    if (name === 'hidden' && value === null) {\n      this.focus()\n      this.dispatchEvent(new CustomEvent('popin-opened'))\n    }\n    if (name === 'hidden' && value !== null) {\n      this.dispatchEvent(new CustomEvent('popin-closed'))\n    }\n  }\n\n  protected ensureElementInView() {\n    // Set our position to the parent element position\n    const parentStyle = this.parentElement?.getBoundingClientRect()\n    this.style.left = `${parentStyle?.left}px`\n    this.style.top = `${parentStyle?.top}px`\n\n    const offsetX = 0\n    const offsetY = 0\n\n    // // Get the element's bounding rectangle\n    const rect = this.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n\n    // Check if the element is out of the viewport on the right side\n    if (rect.left + rect.width + offsetX > viewportWidth) {\n      this.style.left = `${viewportWidth - rect.width - offsetX}px`\n    }\n\n    // Check if the element is out of the viewport on the left side\n    if (rect.left + offsetX < 0) {\n      this.style.left = `${-offsetX}px`\n    }\n\n    // Check if the element is out of the viewport on the bottom\n    if (rect.top + rect.height + offsetY > viewportHeight) {\n      this.style.top = `${viewportHeight - rect.height - offsetY}px`\n    }\n\n    // Check if the element is out of the viewport on the top\n    if (rect.top + offsetY < 0) {\n      this.style.top = `${-offsetY}px`\n    }\n  }\n}\n\nif (!window.customElements.get('popin-overlay')) {\n  window.customElements.define('popin-overlay', PopinOverlay)\n}\n"]}