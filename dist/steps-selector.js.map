{"version":3,"file":"steps-selector.js","sourceRoot":"","sources":["../src/steps-selector.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, TemplateResult} from 'lit'\nimport { classMap } from 'lit/directives/class-map.js'\nimport {customElement, property} from 'lit/decorators.js'\nimport {unsafeHTML} from 'lit/directives/unsafe-html.js'\nimport { inputChainStyles } from './styles.js'\n\nimport './steps-selector-item.js'\n\n/**\n * @element steps-selector\n * Web component to select a sequence of steps\n * \n * It has these events:\n * - load\n * - change\n * \n * It has these properties:\n * - steps\n * - dirty\n * \n * It has these slots:\n * - placeholder\n * - dirty-icon\n * \n * User actions:\n * - add a next step at the end of the selection\n * - reset to default value\n * - copy value to clipboard\n * - paste value from clipboard\n */\n\nexport type StepId = string\nexport interface Step {\n  name: string\n  id: StepId\n  icon: string\n  type: string\n  tags?: string[]\n  helpText?: string\n  errorText?: string\n  options?: any\n  optionsForm?: TemplateResult | string | null\n  meta?: any\n  category?: string\n}\n\nexport type FixedType = 'text' | 'date' | 'email' | 'number' | 'password' | 'tel' | 'time' | 'url'\n\n@customElement('steps-selector')\nexport class StepsSelector extends LitElement {\n  static override styles = inputChainStyles\n\n  public getFixedValueStep(value: string): Step {\n    return {\n      name: 'Fixed value',\n      id: 'fixed' as StepId,\n      icon: '',\n      type: 'fixed',\n      options: {\n        value,\n        inputType: this.inputType,\n      },\n      optionsForm: html`<form>\n        <input name=\"value\" type=${this.inputType} value=${value} />\n        <div class=\"buttons\">\n          <input type=\"reset\" value=\"Cancel\" />\n          <input type=\"submit\" value=\"Apply\" />\n        </div>\n      </form>`,\n    }\n  }\n\n\n  // Read only property dirty\n  get dirty() {\n    return JSON.stringify(this._steps) !== JSON.stringify(this.initialValue)\n  }\n\n  // Steps currently selected\n  @property({type: Array})\n  protected __steps: Step[] = []\n  get steps() {\n    return this.__steps\n  }\n  set steps(value) {\n    const oldValue = this.__steps\n    this.__steps = value\n    this.requestUpdate('steps', oldValue)\n  }\n\n  // Steps with change events - internal use only\n  protected get _steps() {\n    return this.steps\n  }\n  protected set _steps(value) {\n    this.steps = value\n    this.dispatchEvent(new CustomEvent('change', {detail: {value}}))\n  }\n\n  // Initial value\n  protected initialValue: Step[] = []\n\n  // Get the list of steps that can be added after the given selection\n  @property({type: Function})\n  completion: (steps: Step[]) => Step[] = () => []\n\n  @property({type: Boolean, attribute: 'allow-fixed'})\n  allowFixed = false\n\n  @property({type: String, attribute: 'input-type'})\n  inputType: FixedType = 'text'\n\n  @property({type: Boolean, attribute: 'fixed', reflect: true})\n  fixed = false\n\n  @property()\n  placeholder = 'Add a first step'\n\n  @property()\n  fixedPlaceholder = 'Enter a fixed value or switch to expression'\n\n  @property({type: Number, attribute: 'max-steps'})\n  maxSteps: number | undefined\n\n  @property({type: Boolean, attribute: 'group-by-category'})\n  groupByCategory = false\n\n  /**\n   * Form id\n   * This is the same API as input elements\n   */\n  @property({type: String, attribute: 'for'})\n  for = ''\n\n  /**\n   * Name of the property\n   * This is the same API as input elements\n   */\n  @property({type: String})\n  name = ''\n\n  /**\n   * Value setter/getter\n   * This will parse the value as JSON and set the steps\n   * This is the same API as input elements\n   */\n  @property({type: String, attribute: 'value'})\n  get value() {\n    return JSON.stringify(this.steps)\n  }\n  set value(newValue: string) {\n    if(newValue) {\n      this.steps = JSON.parse(newValue)\n    } else {\n      this.steps = []\n    }\n    this.dispatchEvent(new Event('change'))\n  }\n\n  /**\n   * Form setter\n   * Handle formdata event to add the current value to the form\n   */\n  protected _form: HTMLFormElement | null = null\n  set form(newForm: HTMLFormElement | null) {\n    if(this._form) {\n      this._form.removeEventListener('formdata', this.onFormdata)\n    }\n    if(newForm) {\n      newForm.addEventListener('formdata', this.onFormdata)\n    }\n  }\n  get form() {\n    return this._form\n  }\n\n  /**\n   * Handle formdata event to add the current value to the form\n   */\n  protected onFormdata = (event: FormDataEvent) => {\n    if(!this.name) {\n      throw new Error('Attribute name is required for steps-selector')\n    }\n    event.formData.append(this.name, JSON.stringify(this._steps))\n  }\n\n  /**\n   * Render the component\n   */\n  override render() {\n    const nextSteps = this.completion(this._steps)\n    const nextStepsByCategory = this.group(nextSteps)\n    return html`\n      <!-- header -->\n      <header part=\"header\" class=\"header\">\n        <div class=${classMap({dirty: this.dirty, 'property-name': true})} part=\"property-name\">\n          <slot></slot>\n          ${this.dirty ? html`\n            <slot name=\"dirty-icon\" part=\"dirty-icon\" class=\"dirty-icon\" @click=${this.reset}>\n              <svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"></path></svg>\n            </slot>\n          ` : html``}\n        </div>\n        ${this.allowFixed ? html`\n          <div part=\"fixed-selector\" class=\"fixed-selector\">\n            <span\n              class=${classMap({active: this.fixed, 'fixed-selector-fixed': true})}\n              @click=${() => this.fixed = true}\n              part=\"fixed-selector-fixed\"\n            >Fixed</span>\n            <span\n              class=${classMap({active: !this.fixed, 'fixed-selector-expression': true})}\n              @click=${() => this.fixed = false}\n              part=\"fixed-selector-expression\"\n            >Expression</span>\n          </div>\n        ` : html``}\n      </header>\n      <!-- fixed value -->\n      ${this.fixed ? html`\n        <div part=\"property-container\" class=\"property-container\">\n          <input\n            part=\"property-input\" class=\"property-input\"\n            placeholder=${this.fixedPlaceholder}\n            type=${this.inputType}\n            value=${this._steps[0]?.options ? this._steps[0].options['value'] : ''}\n            @change=${(event: InputEvent) => this.fixedValueChanged((event.target as HTMLInputElement).value)}\n          >\n        </div>\n      ` : html`\n        <!-- steps -->\n        <div part=\"scroll-container\" class=\"scroll-container\">\n        <div part=\"steps-container\" class=\"steps-container\">\n          ${this._steps\n            // Add completion to each step\n            .map((step, index) => ({\n              step,\n              completion: this.completion(this._steps.slice(0, index)),\n            }))\n            // Group steps by catégory\n            .map(({step, completion}) => {\n              return {\n                step,\n                completion,\n                completionMap: this.group(completion),\n              }\n            })\n            // Create the ui\n            .map(({step, completion, completionMap}, index) => html`\n              ${index > 0 ? html`<div class=\"steps-container__separator\"></div>` : html``}\n              <steps-selector-item\n                key=${index}\n                ?no-options-editor=${!step.optionsForm}\n                ?no-info=${!step.helpText}\n                @set=${(event: CustomEvent) => this.setStepAt(index, completion.find(s => s.id === event.detail.value))}\n                @delete=${() => this.deleteStepAt(index)}\n                @set-options=${(event: CustomEvent) => this.setOptionsAt(index, event.detail.options, event.detail.optionsForm)}\n                part=\"steps-selector-item\"\n                exportparts=\"value,delete-button,separator__info,separator__options,separator__delete,type,values,helpText,options,tags,errorText,header,name,icon\"\n              >\n                <div part=\"icon\" slot=\"icon\">${unsafeHTML(step.icon)}</div>\n                <div part=\"name\" slot=\"name\">${unsafeHTML(step.name)}</div>\n                <div part=\"type\" slot=\"type\">${unsafeHTML(step.type)}</div>\n                <slot slot=\"delete-button\" name=\"delete-button\">x</slot>\n                <div slot=\"helpText\">${unsafeHTML(step.helpText)}</div>\n                <ul slot=\"tags\">\n                  ${step.tags?.map(tag => html`<li>${unsafeHTML(tag)}</li>`)}\n                </ul>\n                <div slot=\"errorText\">${unsafeHTML(step.errorText)}</div>\n                <div slot=\"values\">\n                  ${ this.renderValues(completion, completionMap, this._steps[index]) }\n                </div>\n                <div slot=\"options\">${typeof step.optionsForm === 'string' ? unsafeHTML(step.optionsForm) : step.optionsForm}</div>\n              </steps-selector-item>\n            `)}\n        <!-- add a step -->\n        ${nextSteps.length > 0 && (typeof this.maxSteps === 'undefined' || this.maxSteps === -1 || this._steps.length < this.maxSteps ) ? html`\n          <div part=\"separator__add\"></div>\n          <steps-selector-item\n            exportparts=\"value,delete-button,separator__info,separator__options,separator__delete,type,values,helpText,options,tags,header,errorText,icon\"\n            class=\"steps-selector-item__add\"\n            part=\"steps-selector-item__add\"\n            no-options-editor\n            no-delete\n            no-arrow\n            no-info\n            @set=${(event: CustomEvent) => this.setStepAt(this._steps.length, nextSteps.find(step => step.id === event.detail.value))}\n          >\n            <div name=\"add-button\" part=\"add-button\" slot=\"name\">+</div>\n            <div slot=\"values\">\n              ${ this.renderValues(nextSteps, nextStepsByCategory) }\n            </div>\n          </steps-selector-item>\n        ` : html``}\n        <!-- no steps -->\n        ${this._steps.length > 0 ? html`` : html`\n          <slot name=\"placeholder\" part=\"placeholder\" class=\"placeholder\">\n            <p>${this.placeholder}</p>\n          </slot>\n        `}\n        </div>\n        </div>\n      `}\n    `\n  }\n\n  group(completion: Step[]): Map<string, Step[]> {\n    return completion.reduce((map, step) => {\n      const category = step.category ?? 'Other'\n      const steps = map.get(category) ?? []\n      steps.push(step)\n      map.set(category, steps)\n      return map\n    }, new Map<string, Step[]>())\n  }\n\n  renderValues(completion: Step[], completionMap: Map<string, Step[]>, currentStep?: Step) {\n    return this.groupByCategory ? html`\n      <ul class=\"values-ul\">\n        ${Array.from(completionMap.entries())\n          .map(([category, steps]) => html`\n          <li class=\"values-li values__title\" value=${category}>\n            <span class=\"values__name\">${unsafeHTML(category)}</span>\n          </li>\n          ${steps.map(step => html`<li class=${classMap({'values-li': true, active: step.id === currentStep?.id})} value=${step.id}>\n            <span class=\"values__name\">\n              <span class=\"values__icon\">${unsafeHTML(step.icon)}</span>\n              ${unsafeHTML(step.name)}\n            </span>\n            <span class=\"values__type\">${unsafeHTML(step.type)}</span>\n          </li>`)}\n        `)}\n      </ul>\n    ` : html`\n      <ul class=\"values-ul\">\n        ${\n          completion\n            .map(step => html`<li class=${classMap({'values-li': true, active: step.id === currentStep?.id})} value=${step.id}>\n              <span class=\"values__name\">\n                <span class=\"values__icon\">${unsafeHTML(step.icon)}</span>\n                ${unsafeHTML(step.name)}\n              </span>\n              <span class=\"values__type\">${unsafeHTML(step.type)}</span>\n            </li>`)\n        }\n      </ul>\n    `\n  }\n\n  override connectedCallback() {\n    super.connectedCallback()\n    // Use the form to add formdata\n    if(this.for) {\n      const form = document.querySelector<HTMLFormElement>(`form#${this.for}`)\n      if(form) {\n        this.form = form\n      }\n    } else {\n      this.form = this.closest('form')\n    }\n\n    // Notify the parent app\n    this.dispatchEvent(new Event('load'))\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback()\n    this.form = null\n  }\n\n  isFixedValue() {\n    return this.allowFixed && this.fixed && (this._steps.length === 0 || this._steps[0].type === 'fixed')\n  }\n\n  fixedValueChanged(value: string) {\n    if (value && value !== '') {\n      this._steps = [\n        this.getFixedValueStep(value),\n      ]\n    } else {\n      this._steps = []\n    }\n  }\n\n  /**\n   * Set the step at the given index\n   */\n  setStepAt(at: number, step: Step | undefined) {\n    if (step) {\n      this._steps = [\n        ...this._steps.slice(0, at),\n        step,\n      ]\n    } else {\n      console.error(`Step is undefined at ${at}`)\n    }\n  }\n\n  setOptionsAt(at: number, options: unknown, optionsForm: TemplateResult) {\n    this._steps = [\n      ...this._steps.slice(0, at),\n      {\n        ...this._steps[at],\n        options,\n        optionsForm,\n      },\n      ...this._steps.slice(at + 1),\n    ]\n  }\n\n  /**\n   * Delete the step at the given index and all the following steps\n   */\n  deleteStepAt(at: number) {\n    this._steps = this._steps.slice(0, at)\n  }\n\n  /**\n   * Reset dirty flag and store the current value as initial value\n   */\n  public save() {\n    this.initialValue = [\n      ...this._steps,\n    ]\n  }\n\n  /**\n   * Reset dirty flag and restore the initial value\n   */\n  reset() {\n    this._steps = [\n      ...this.initialValue,\n    ]\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'steps-selector': StepsSelector\n  }\n}\n"]}