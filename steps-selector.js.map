{"version":3,"file":"steps-selector.js","sourceRoot":"","sources":["src/steps-selector.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit'\nimport { classMap } from 'lit/directives/class-map.js'\nimport {customElement, property} from 'lit/decorators.js'\nimport {unsafeHTML} from 'lit/directives/unsafe-html.js'\n\nimport './steps-selector-item.js'\n\n/**\n * @element steps-selector\n * Web component to select a sequence of steps\n * \n * It has these events:\n * - load\n * - change\n * \n * It has these properties:\n * - steps\n * - dirty\n * \n * It has these slots:\n * - placeholder\n * - dirty-icon\n * \n * User actions:\n * - add a next step at the end of the selection\n * - reset to default value\n * - copy value to clipboard\n * - paste value from clipboard\n */\n\nexport interface Step {\n  name: string\n  icon: string\n  type: string\n  tags?: string[]\n  helpText?: string\n  errorText?: string\n  options?: any\n  optionsForm?: string\n}\n\n@customElement('steps-selector')\nexport class StepsSelector extends LitElement {\n  static override styles = css`\n    :host {\n      --steps-selector-dirty-color: red;\n    }\n    ::part(header) {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .dirty {\n      color: var(--steps-selector-dirty-color, red);\n    }\n    ::part(property-container) {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n    ::part(fixed-selector) {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      border: 1px solid var(--steps-selector-dirty-border-color, #ccc);\n      background-color: var(--steps-selector-dirty-background-color, #ccc);\n      border-radius: 5px;\n      padding: 3px;\n    }\n    .fixed-selector span {\n      padding: 3px;\n    }\n    .fixed-selector span:not(.active):hover {\n      color: var(--steps-selector-dirty-color, #0091ff);\n    }\n    .fixed-selector span:not(.active) {\n      cursor: pointer;\n    }\n    .fixed-selector span:last-child {\n      margin-left: 5px;\n    }\n    .fixed-selector span.active {\n      border-radius: 5px;\n      background-color: #eee;\n      cursor: default;\n    }\n    steps-selector-item {\n      padding: 10px;\n      margin: 10px;\n    }\n  `\n\n  // Read only property dirty\n  get dirty() {\n    return JSON.stringify(this._steps) !== JSON.stringify(this.initialValue)\n  }\n\n  // Steps currently selected\n  @property({type: Array})\n  steps: Step[] = []\n\n  // Steps with change events - internal use only\n  protected get _steps() {\n    return this.steps\n  }\n  protected set _steps(value) {\n    const oldValue = this.steps\n    this.steps = value\n    this.requestUpdate('steps', oldValue)\n    this.dispatchEvent(new CustomEvent('change', {detail: {value}}))\n  }\n\n  // Initial value\n  protected initialValue: Step[] = []\n\n  // Get the list of steps that can be added after the given selection\n  @property({type: Function})\n  completion: (steps: Step[]) => Step[] = () => []\n\n  @property({type: Boolean, attribute: 'allow-fixed'})\n  allowFixed = false\n\n  @property({type: Boolean, attribute: 'fixed', reflect: true})\n  fixed = false\n\n  @property({type: String, attribute: 'fixed-type'})\n  fixedType: 'text' | 'date' | 'email' | 'number' | 'password' | 'tel' | 'time' | 'url' = 'text'\n\n  @property()\n  placeholder = 'Add a first step'\n\n  override render() {\n    console.log('render ==== ', this.fixed)\n    const nextSteps = this.completion(this._steps)\n    return html`\n      <!-- header -->\n      <header part=\"header\" class=\"header\">\n        <div class=${classMap({dirty: this.dirty, 'property-name': true})} part=\"property-name\">\n          <slot></slot>\n          ${this.dirty ? html`\n            <slot name=\"dirty-icon\" @click=${this.reset}>\n              <svg viewBox=\"0 0 24 24\" width=\"20\"><path fill=\"currentColor\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"></path></svg>\n            </slot>\n          ` : html``}\n        </div>\n        ${this.allowFixed ? html`\n          <div part=\"fixed-selector\" class=\"fixed-selector\">\n            <span\n              class=${classMap({active: this.fixed, 'fixed-selector-fixed': true})}\n              @click=${() => this.fixed = true}\n              part=\"fixed-selector-fixed\"\n            >Fixed</span>\n            <span\n              class=${classMap({active: !this.fixed, 'fixed-selector-expression': true})}\n              @click=${() => this.fixed = false}\n              part=\"fixed-selector-expression\"\n            >Expression</span>\n          </div>\n        ` : ''}\n      </header>\n      <!-- fixed value -->\n      ${this.fixed ? html`\n        <div part=\"property-container\" class=\"property-container\">\n          <input\n            .placeholder=${this.placeholder}\n            .type=${this.fixedType}\n            .value=${this._steps[0]?.options ? this._steps[0].options['value'] : ''}\n            @change=${(event: InputEvent) => this.fixedValueChanged((event.target as HTMLInputElement).value)}\n          >\n        </div>\n      ` : html`\n        <!-- steps -->\n        <div part=\"steps-container\" class=\"steps-container\">\n          ${this._steps\n            .map((step, index) => ({\n              step,\n              completion: this.completion(this._steps.slice(0, index)),\n            }))\n            .map(({step, completion}, index) => html`\n              <steps-selector-item\n                key=${index}\n                ?no-options-editor=${!step.optionsForm}\n                ?no-info=${!step.helpText}\n                @set=${(event: CustomEvent) => this.setStepAt(index, completion.find(s => s.name === event.detail.value))}\n                @delete=${() => this.deleteStepAt(index)}\n                @set-options=${(event: CustomEvent) => this.setOptionsAt(index, event.detail.options)}\n              >\n                <div slot=\"icon\">${step.icon}</div>\n                <div slot=\"name\">${step.name}</div>\n                <ul slot=\"tags\">\n                  ${step.tags?.map(tag => html`<li>${tag}</li>`)}\n                </ul>\n                <div slot=\"type\">${step.type}</div>\n                <div slot=\"helpText\">${unsafeHTML(step.helpText)}</div>\n                <div slot=\"errorText\">${unsafeHTML(step.errorText)}</div>\n                <div slot=\"values\">\n                  <ul>\n                    ${\n                      completion\n                        .map(step => html`<li value=${step.name}>${step.name}</li>`)\n                    }\n                  </ul>\n                </div>\n                <div slot=\"options\">${unsafeHTML(step.optionsForm)}</div>\n              </steps-selector-item>\n            `)}\n        <!-- no steps -->\n        ${this._steps.length > 0 ? html`` : html`\n          <slot name=\"placeholder\" part=\"placeholder\">\n            <p>${this.placeholder}</p>\n          </slot>\n        `}\n        <!-- add a step -->\n        ${nextSteps.length > 0 ? html`\n          <steps-selector-item\n            no-options-editor\n            no-delete\n            no-arrow\n            no-info\n            @set=${(event: CustomEvent) => this.setStepAt(this._steps.length, nextSteps.find(step => step.name === event.detail.value))}\n          >\n            <div slot=\"name\">+</div>\n            <div slot=\"values\">\n              <ul>\n                ${ nextSteps.map(step => html`<li value=${step.name}>${step.name}</li>`) }\n              </ul>\n            </div>\n          </steps-selector-item>\n        ` : html``}\n        </div>\n      `}\n    `\n  }\n\n  override connectedCallback() {\n    super.connectedCallback()\n    this.dispatchEvent(new Event('load'))\n  }\n\n  isFixedValue() {\n    return this.allowFixed && this.fixed && (this._steps.length === 0 || this._steps[0].type === 'fixed')\n  }\n\n  fixedValueChanged(value: string) {\n    if (value && value !== '') {\n      this._steps = [\n        {\n          name: 'Fixed value',\n          icon: '',\n          type: 'fixed',\n          options: {\n            value,\n          },\n          optionsForm: `<form><input name=\"value\" type=\"text\" value=${value} /><button type=\"submit\">Save</button></form>`,\n        },\n      ]\n    } else {\n      this._steps = []\n    }\n  }\n\n  /**\n   * Set the step at the given index\n   */\n  setStepAt(at: number, step: Step | undefined) {\n    if (step) {\n      this._steps = [\n        ...this._steps.slice(0, at),\n        step,\n      ]\n    } else {\n      console.error(`Step is undefined at ${at}`)\n    }\n  }\n\n  setOptionsAt(at: number, options: unknown) {\n    this._steps = [\n      ...this._steps.slice(0, at),\n      {\n        ...this._steps[at],\n        options,\n      },\n      ...this._steps.slice(at + 1),\n    ]\n  }\n\n  /**\n   * Delete the step at the given index and all the following steps\n   */\n  deleteStepAt(at: number) {\n    this._steps = this._steps.slice(0, at)\n  }\n\n  /**\n   * Reset dirty flag and store the current value as initial value\n   */\n  public save() {\n    this.initialValue = [\n      ...this._steps,\n    ]\n  }\n\n  /**\n   * Reset dirty flag and restore the initial value\n   */\n  reset() {\n    this._steps = [\n      ...this.initialValue,\n    ]\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'steps-selector': StepsSelector\n  }\n}\n"]}